{ message: { imagesArray: [] }, level: 'error' }
{
  message: {
    function: 'facebookService.getLinkFromId',
    error: Error: Error creating link from id array
        at FacebookService.<anonymous> (C:\Users\Adria\Documents\code\turco\informe5Backend\Services\facebook.service.ts:107:17)
        at Generator.next (<anonymous>)
        at fulfilled (C:\Users\Adria\Documents\code\turco\informe5Backend\Services\facebook.service.ts:5:58)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
  },
  level: 'error'
}
{
  message: {
    function: 'PostController.checkedPhotos',
    error: TypeError: Cannot read properties of null (reading 'map')
        at PostController.<anonymous> (C:\Users\Adria\Documents\code\turco\informe5Backend\post\post.controller.ts:197:67)
        at Generator.next (<anonymous>)
        at fulfilled (C:\Users\Adria\Documents\code\turco\informe5Backend\post\post.controller.ts:5:58)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
  },
  level: 'error'
}
{
  message: {
    function: 'PostController.getAllPosts',
    error: TypeError: Cannot read properties of null (reading 'length')
        at C:\Users\Adria\Documents\code\turco\informe5Backend\post\post.controller.ts:148:52
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
  },
  level: 'error'
}
{ message: { imagesArray: [] }, level: 'error' }
{
  message: {
    function: 'facebookService.getLinkFromId',
    error: Error: Error creating link from id array
        at FacebookService.<anonymous> (C:\Users\Adria\Documents\code\turco\informe5Backend\Services\facebook.service.ts:107:17)
        at Generator.next (<anonymous>)
        at fulfilled (C:\Users\Adria\Documents\code\turco\informe5Backend\Services\facebook.service.ts:5:58)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
  },
  level: 'error'
}
{
  message: {
    function: 'PostController.checkedPhotos',
    error: TypeError: Cannot read properties of null (reading 'map')
        at PostController.<anonymous> (C:\Users\Adria\Documents\code\turco\informe5Backend\post\post.controller.ts:197:67)
        at Generator.next (<anonymous>)
        at fulfilled (C:\Users\Adria\Documents\code\turco\informe5Backend\post\post.controller.ts:5:58)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
  },
  level: 'error'
}
{
  message: {
    function: 'PostController.getAllPosts',
    error: TypeError: Cannot read properties of null (reading 'length')
        at C:\Users\Adria\Documents\code\turco\informe5Backend\post\post.controller.ts:148:52
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
  },
  level: 'error'
}
{
  message: {
    function: 'PostController.getAllPosts',
    error: TypeError: Converting circular structure to JSON
        --> starting at object with constructor 'DerivedLogger'
        |     property '_readableState' -> object with constructor 'ReadableState'
        |     property 'pipes' -> object with constructor 'Array'
        |     index 0 -> object with constructor 'File'
        --- property 'parent' closes the circle
        at JSON.stringify (<anonymous>)
        at stringify (C:\Users\Adria\Documents\code\turco\informe5Backend\node_modules\express\lib\response.js:1150:12)
        at ServerResponse.json (C:\Users\Adria\Documents\code\turco\informe5Backend\node_modules\express\lib\response.js:271:14)
        at ServerResponse.send (C:\Users\Adria\Documents\code\turco\informe5Backend\node_modules\express\lib\response.js:162:21)
        at PostController.<anonymous> (C:\Users\Adria\Documents\code\turco\informe5Backend\post\post.controller.ts:158:27)
        at Generator.next (<anonymous>)
        at fulfilled (C:\Users\Adria\Documents\code\turco\informe5Backend\post\post.controller.ts:5:58)
  },
  level: 'error'
}
{
  message: {
    function: 'postController.deletePost',
    error: TypeError: Cannot read properties of undefined (reading 'service')
        at C:\Users\aabadin\Documents\code\informe5Backend\post\post.controller.ts:370:35
        at Generator.next (<anonymous>)
        at C:\Users\aabadin\Documents\code\informe5Backend\post\post.controller.ts:8:71
        at new Promise (<anonymous>)
        at __awaiter (C:\Users\aabadin\Documents\code\informe5Backend\post\post.controller.ts:4:12)
        at deletePost (C:\Users\aabadin\Documents\code\informe5Backend\post\post.controller.ts:286:16)
        at Layer.handle [as handle_request] (C:\Users\aabadin\Documents\code\informe5Backend\node_modules\express\lib\router\layer.js:95:5)
        at next (C:\Users\aabadin\Documents\code\informe5Backend\node_modules\express\lib\router\route.js:144:13)
        at C:\Users\aabadin\Documents\code\informe5Backend\middlewares\zod.validate.ts:23:5
        at Layer.handle [as handle_request] (C:\Users\aabadin\Documents\code\informe5Backend\node_modules\express\lib\router\layer.js:95:5)
  },
  level: 'error'
}
{ message: { imagesArray: [] }, level: 'error' }
{
  message: {
    function: 'facebookService.getLinkFromId',
    error: Error: Error creating link from id array
        at FacebookService.<anonymous> (C:\Users\Adria\Documents\code\turco\informe5Backend\Services\facebook.service.ts:107:17)
        at Generator.next (<anonymous>)
        at fulfilled (C:\Users\Adria\Documents\code\turco\informe5Backend\Services\facebook.service.ts:5:58)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
  },
  level: 'error'
}
{
  message: {
    function: 'PostController.checkedPhotos',
    error: TypeError: Cannot read properties of null (reading 'map')
        at PostController.<anonymous> (C:\Users\Adria\Documents\code\turco\informe5Backend\post\post.controller.ts:337:38)
        at Generator.next (<anonymous>)
        at fulfilled (C:\Users\Adria\Documents\code\turco\informe5Backend\post\post.controller.ts:5:58)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
  },
  level: 'error'
}
{
  message: {
    function: 'PostController.getAllPosts',
    error: TypeError: Cannot read properties of null (reading 'length')
        at C:\Users\Adria\Documents\code\turco\informe5Backend\post\post.controller.ts:240:56
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
  },
  level: 'error'
}
{
  message: {
    function: 'PostController.getAllPosts',
    error: TypeError: Converting circular structure to JSON
        --> starting at object with constructor 'DerivedLogger'
        |     property '_readableState' -> object with constructor 'ReadableState'
        |     property 'pipes' -> object with constructor 'Array'
        |     index 0 -> object with constructor 'File'
        --- property 'parent' closes the circle
        at JSON.stringify (<anonymous>)
        at stringify (C:\Users\Adria\Documents\code\turco\informe5Backend\node_modules\express\lib\response.js:1150:12)
        at ServerResponse.json (C:\Users\Adria\Documents\code\turco\informe5Backend\node_modules\express\lib\response.js:271:14)
        at ServerResponse.send (C:\Users\Adria\Documents\code\turco\informe5Backend\node_modules\express\lib\response.js:162:21)
        at PostController.<anonymous> (C:\Users\Adria\Documents\code\turco\informe5Backend\post\post.controller.ts:261:29)
        at Generator.next (<anonymous>)
        at fulfilled (C:\Users\Adria\Documents\code\turco\informe5Backend\post\post.controller.ts:5:58)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
  },
  level: 'error'
}
{
  message: {
    function: 'DatabaseHandler.FindById',
    error: PrismaClientKnownRequestError: 
    Invalid `prisma.users.findUniqueOrThrow()` invocation:
    
    
    Can't reach database server at `127.0.0.1`:`3306`
    
    Please make sure your database server is running at `127.0.0.1`:`3306`.
        at zr.handleRequestError (C:\Users\Adria\Documents\code\turco\informe5Backend\node_modules\@prisma\client\runtime\library.js:122:8308)
        at zr.handleAndLogRequestError (C:\Users\Adria\Documents\code\turco\informe5Backend\node_modules\@prisma\client\runtime\library.js:122:7697)
        at zr.request (C:\Users\Adria\Documents\code\turco\informe5Backend\node_modules\@prisma\client\runtime\library.js:122:7307)
        at C:\Users\Adria\Documents\code\turco\informe5Backend\node_modules\@prisma\client\runtime\library.js:112:550 {
      code: 'P1001',
      clientVersion: '5.0.0',
      meta: { database_host: '127.0.0.1', database_port: 3306 }
    }
  },
  level: 'error'
}
{
  message: {
    function: 'AuthService.jwtLoginVerify',
    error: TypeError: Cannot use 'in' operator to search for 'username' in null
        at AuthService.<anonymous> (C:\Users\Adria\Documents\code\turco\informe5Backend\auth\auth.service.ts:66:23)
        at Generator.next (<anonymous>)
        at fulfilled (C:\Users\Adria\Documents\code\turco\informe5Backend\auth\auth.service.ts:5:58)
  },
  level: 'error'
}
{
  message: {
    function: 'DatabaseHandler.FindById',
    error: PrismaClientKnownRequestError: 
    Invalid `prisma.users.findUniqueOrThrow()` invocation:
    
    
    Can't reach database server at `127.0.0.1`:`3306`
    
    Please make sure your database server is running at `127.0.0.1`:`3306`.
        at zr.handleRequestError (C:\Users\Adria\Documents\code\turco\informe5Backend\node_modules\@prisma\client\runtime\library.js:122:8308)
        at zr.handleAndLogRequestError (C:\Users\Adria\Documents\code\turco\informe5Backend\node_modules\@prisma\client\runtime\library.js:122:7697)
        at zr.request (C:\Users\Adria\Documents\code\turco\informe5Backend\node_modules\@prisma\client\runtime\library.js:122:7307)
        at C:\Users\Adria\Documents\code\turco\informe5Backend\node_modules\@prisma\client\runtime\library.js:112:550 {
      code: 'P1001',
      clientVersion: '5.0.0',
      meta: { database_host: '127.0.0.1', database_port: 3306 }
    }
  },
  level: 'error'
}
{
  message: {
    function: 'AuthService.jwtLoginVerify',
    error: TypeError: Cannot use 'in' operator to search for 'username' in null
        at AuthService.<anonymous> (C:\Users\Adria\Documents\code\turco\informe5Backend\auth\auth.service.ts:66:23)
        at Generator.next (<anonymous>)
        at fulfilled (C:\Users\Adria\Documents\code\turco\informe5Backend\auth\auth.service.ts:5:58)
  },
  level: 'error'
}
{
  message: {
    function: 'DatabaseHandler.FindById',
    error: PrismaClientKnownRequestError: 
    Invalid `prisma.users.findUniqueOrThrow()` invocation:
    
    
    Can't reach database server at `127.0.0.1`:`3306`
    
    Please make sure your database server is running at `127.0.0.1`:`3306`.
        at zr.handleRequestError (C:\Users\Adria\Documents\code\turco\informe5Backend\node_modules\@prisma\client\runtime\library.js:122:8308)
        at zr.handleAndLogRequestError (C:\Users\Adria\Documents\code\turco\informe5Backend\node_modules\@prisma\client\runtime\library.js:122:7697)
        at zr.request (C:\Users\Adria\Documents\code\turco\informe5Backend\node_modules\@prisma\client\runtime\library.js:122:7307)
        at C:\Users\Adria\Documents\code\turco\informe5Backend\node_modules\@prisma\client\runtime\library.js:112:550 {
      code: 'P1001',
      clientVersion: '5.0.0',
      meta: { database_host: '127.0.0.1', database_port: 3306 }
    }
  },
  level: 'error'
}
{
  message: {
    function: 'AuthService.jwtLoginVerify',
    error: TypeError: Cannot use 'in' operator to search for 'username' in null
        at AuthService.<anonymous> (C:\Users\Adria\Documents\code\turco\informe5Backend\auth\auth.service.ts:66:23)
        at Generator.next (<anonymous>)
        at fulfilled (C:\Users\Adria\Documents\code\turco\informe5Backend\auth\auth.service.ts:5:58)
  },
  level: 'error'
}
{
  message: {
    function: 'AuthService.localLoginVerify',
    error: PrismaClientKnownRequestError: 
    Invalid `this.prisma.users.findUniqueOrThrow()` invocation in
    C:\Users\Adria\Documents\code\turco\informe5Backend\auth\auth.service.ts:40:106
    
      37 },
      38 public localLoginVerify = async (req: Request, username: string, password: string, done: DoneType) => {
      39   try {
    → 40     const user: Prisma.UsersCreateInput | Prisma.UsersUncheckedCreateInput = await this.prisma.users.findUniqueOrThrow(
    Can't reach database server at `127.0.0.1`:`3306`
    
    Please make sure your database server is running at `127.0.0.1`:`3306`.
        at zr.handleRequestError (C:\Users\Adria\Documents\code\turco\informe5Backend\node_modules\@prisma\client\runtime\library.js:122:8308)
        at zr.handleAndLogRequestError (C:\Users\Adria\Documents\code\turco\informe5Backend\node_modules\@prisma\client\runtime\library.js:122:7697)
        at zr.request (C:\Users\Adria\Documents\code\turco\informe5Backend\node_modules\@prisma\client\runtime\library.js:122:7307)
        at C:\Users\Adria\Documents\code\turco\informe5Backend\node_modules\@prisma\client\runtime\library.js:112:550 {
      code: 'P1001',
      clientVersion: '5.0.0',
      meta: { database_host: '127.0.0.1', database_port: 3306 }
    }
  },
  level: 'error'
}
{
  message: {
    function: 'schemaValidator',
    error: ZodError: [
      {
        "code": "invalid_type",
        "expected": "string",
        "received": "undefined",
        "path": [
          "body",
          "fbid"
        ],
        "message": "Required"
      }
    ]
        at Object.get error [as error] (C:\Users\Adria\Documents\code\turco\informe5Backend\node_modules\zod\lib\types.js:43:31)
        at ZodObject.parse (C:\Users\Adria\Documents\code\turco\informe5Backend\node_modules\zod\lib\types.js:141:22)
        at C:\Users\Adria\Documents\code\turco\informe5Backend\middlewares\zod.validate.ts:17:14
        at Layer.handle [as handle_request] (C:\Users\Adria\Documents\code\turco\informe5Backend\node_modules\express\lib\router\layer.js:95:5)
        at next (C:\Users\Adria\Documents\code\turco\informe5Backend\node_modules\express\lib\router\route.js:144:13)
        at Route.dispatch (C:\Users\Adria\Documents\code\turco\informe5Backend\node_modules\express\lib\router\route.js:114:3)
        at Layer.handle [as handle_request] (C:\Users\Adria\Documents\code\turco\informe5Backend\node_modules\express\lib\router\layer.js:95:5)
        at C:\Users\Adria\Documents\code\turco\informe5Backend\node_modules\express\lib\router\index.js:284:15
        at param (C:\Users\Adria\Documents\code\turco\informe5Backend\node_modules\express\lib\router\index.js:365:14)
        at param (C:\Users\Adria\Documents\code\turco\informe5Backend\node_modules\express\lib\router\index.js:376:14) {
      issues: [
        {
          code: 'invalid_type',
          expected: 'string',
          received: 'undefined',
          path: [ 'body', 'fbid' ],
          message: 'Required'
        }
      ],
      addIssue: [Function (anonymous)],
      addIssues: [Function (anonymous)],
      errors: [
        {
          code: 'invalid_type',
          expected: 'string',
          received: 'undefined',
          path: [ 'body', 'fbid' ],
          message: 'Required'
        }
      ]
    }
  },
  level: 'error'
}
{
  message: {
    function: 'PostService.showPost',
    error: PrismaClientValidationError: 
    Invalid `this.prisma.posts.update()` invocation in
    C:\Users\aabadin\Documents\code\informe5Backend\post\post.service.ts:182:50
    
      179 },
      180 public showPost = async (id: string): Promise<GenericResponseObject<Prisma.PostsUpdateInput>> => {
      181   try {
    → 182     const response = await this.prisma.posts.update({
                where: {
                  id: "1e3a361e-1617-4fca-96f6-15c96447ee66"
                },
                data: {
                  isVisible: {
                  ~~~~~~~~~
                    set: true
                  },
              ?   id?: String | StringFieldUpdateOperationsInput,
              ?   createdAt?: DateTime | DateTimeFieldUpdateOperationsInput,
              ?   updatedAt?: DateTime | DateTimeFieldUpdateOperationsInput,
              ?   title?: String | StringFieldUpdateOperationsInput,
              ?   subTitle?: String | NullableStringFieldUpdateOperationsInput | Null,
              ?   heading?: String | StringFieldUpdateOperationsInput,
              ?   text?: String | StringFieldUpdateOperationsInput,
              ?   classification?: String | StringFieldUpdateOperationsInput,
              ?   importance?: Int | IntFieldUpdateOperationsInput,
              ?   fbid?: String | NullableStringFieldUpdateOperationsInput | Null,
              ?   images?: PhotosUpdateManyWithoutPostsNestedInput,
              ?   author?: UsersUpdateOneRequiredWithoutPostsNestedInput,
              ?   metrics?: MetricUpdateManyWithoutPostsNestedInput
                }
              })
    
    Unknown argument `isVisible`. Available options are listed in green.
        at Ur (C:\Users\aabadin\Documents\code\informe5Backend\node_modules\@prisma\client\runtime\library.js:115:5803)
        at zr.handleRequestError (C:\Users\aabadin\Documents\code\informe5Backend\node_modules\@prisma\client\runtime\library.js:122:8007)
        at zr.handleAndLogRequestError (C:\Users\aabadin\Documents\code\informe5Backend\node_modules\@prisma\client\runtime\library.js:122:7697)
        at zr.request (C:\Users\aabadin\Documents\code\informe5Backend\node_modules\@prisma\client\runtime\library.js:122:7307) {
      clientVersion: '5.0.0'
    }
  },
  level: 'error'
}
{
  message: {
    function: 'PostService.updatePost',
    error: PrismaClientKnownRequestError: 
    Invalid `this.prisma.posts.update()` invocation in
    C:\Users\aabadin\Documents\code\informe5Backend\post\post.service.ts:94:48
    
      91 const author: string = postObject.author as string
      92 /* aca debo hacer distintas ramas en el caso de que se tenga imagenes para borrar, tenga imagenes para agregar  */
      93 if (author === undefined) throw new Error('No author specified')
    → 94 const data = await this.prisma.posts.update(
    The provided value for the column is too long for the column's type. Column: =
        at zr.handleRequestError (C:\Users\aabadin\Documents\code\informe5Backend\node_modules\@prisma\client\runtime\library.js:122:8308)
        at zr.handleAndLogRequestError (C:\Users\aabadin\Documents\code\informe5Backend\node_modules\@prisma\client\runtime\library.js:122:7697)
        at zr.request (C:\Users\aabadin\Documents\code\informe5Backend\node_modules\@prisma\client\runtime\library.js:122:7307) {
      code: 'P2000',
      clientVersion: '5.0.0',
      meta: { column_name: '=' }
    }
  },
  level: 'error'
}
{
  message: {
    function: 'PostService.updatePost',
    error: PrismaClientKnownRequestError: 
    Invalid `this.prisma.posts.update()` invocation in
    C:\Users\aabadin\Documents\code\informe5Backend\post\post.service.ts:94:48
    
      91 const author: string = postObject.author as string
      92 /* aca debo hacer distintas ramas en el caso de que se tenga imagenes para borrar, tenga imagenes para agregar  */
      93 if (author === undefined) throw new Error('No author specified')
    → 94 const data = await this.prisma.posts.update(
    The provided value for the column is too long for the column's type. Column: =
        at zr.handleRequestError (C:\Users\aabadin\Documents\code\informe5Backend\node_modules\@prisma\client\runtime\library.js:122:8308)
        at zr.handleAndLogRequestError (C:\Users\aabadin\Documents\code\informe5Backend\node_modules\@prisma\client\runtime\library.js:122:7697)
        at zr.request (C:\Users\aabadin\Documents\code\informe5Backend\node_modules\@prisma\client\runtime\library.js:122:7307) {
      code: 'P2000',
      clientVersion: '5.0.0',
      meta: { column_name: '=' }
    }
  },
  level: 'error'
}
